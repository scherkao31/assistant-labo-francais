#!/usr/bin/env python3
"""
Script pour initialiser la base de donn√©es vectorielle
"""

import os
from dotenv import load_dotenv
from rag_system import RAGSystem

def main():
    """
    Initialise la base de donn√©es vectorielle avec les documents
    """
    # Charger les variables d'environnement
    load_dotenv()
    
    # V√©rifier la cl√© API
    openai_api_key = os.getenv("OPENAI_API_KEY")
    if not openai_api_key:
        print("‚ùå Erreur: OPENAI_API_KEY n'est pas d√©fini")
        print("Cr√©ez un fichier .env avec votre cl√© API OpenAI")
        return
    
    print("üöÄ Initialisation de la base de donn√©es vectorielle...")
    
    # Cr√©er le syst√®me RAG
    rag_system = RAGSystem(openai_api_key=openai_api_key)
    
    # V√©rifier que le dossier data existe
    if not os.path.exists("data"):
        print("‚ùå Erreur: Le dossier 'data' n'existe pas")
        return
    
    # Lister les fichiers
    md_files = [f for f in os.listdir("data") if f.endswith(".md")]
    if not md_files:
        print("‚ùå Erreur: Aucun fichier .md trouv√© dans le dossier 'data'")
        return
    
    print(f"üìÅ Fichiers trouv√©s: {', '.join(md_files)}")
    
    # Construire la base de donn√©es
    try:
        rag_system.build_database()
        print("‚úÖ Base de donn√©es vectorielle cr√©√©e avec succ√®s!")
        print("Vous pouvez maintenant lancer l'application avec: python app.py")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la construction: {e}")

if __name__ == "__main__":
    main() 